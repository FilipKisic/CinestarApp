package hr.algebra;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.User;
import hr.algebra.utils.MessageUtils;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Arrays;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author filip
 */
public class LoginRegisterFrame extends javax.swing.JFrame {

    private final String BACKGROUND_PATH = "/assets/CinemaSeats.jpg";
    private static List<JTextField> validationFields;
    private static Repository repository;
    private static final String ADMIN_USERNAME = "admin";
    private static final String ADMIN_PASSWORD = "algebra";
    private User user;
    
    public LoginRegisterFrame() {
        setUndecorated(true);
        initComponents();
        imageSetup();
        initSetup();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();
        lbErrorText = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();
        lbExit = new javax.swing.JLabel();
        lbFacebook = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbInstagram = new javax.swing.JLabel();
        lbTwitter = new javax.swing.JLabel();
        lbYoutube = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lbIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Username:");

        tfUsername.setBackground(new java.awt.Color(51, 51, 51));
        tfUsername.setFont(new java.awt.Font("Century Gothic", 0, 16)); // NOI18N
        tfUsername.setForeground(new java.awt.Color(255, 255, 255));
        tfUsername.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        tfUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfUsernameKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Password:");

        pfPassword.setBackground(new java.awt.Color(51, 51, 51));
        pfPassword.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        pfPassword.setForeground(new java.awt.Color(255, 255, 255));
        pfPassword.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        pfPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pfPasswordKeyPressed(evt);
            }
        });

        lbErrorText.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lbErrorText.setForeground(new java.awt.Color(255, 51, 51));
        lbErrorText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnRegister.setBackground(new java.awt.Color(129, 0, 13));
        btnRegister.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnRegister.setForeground(new java.awt.Color(255, 255, 255));
        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        btnLogin.setBackground(new java.awt.Color(212, 2, 41));
        btnLogin.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lbExit.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N
        lbExit.setForeground(new java.awt.Color(255, 51, 51));
        lbExit.setText("X");
        lbExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelMouseEntered(evt);
            }
        });

        lbFacebook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/facebook.png"))); // NOI18N
        lbFacebook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbFacebookMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelMouseEntered(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Join us on our social media:");

        lbInstagram.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/instagram.png"))); // NOI18N
        lbInstagram.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbInstagramMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelMouseEntered(evt);
            }
        });

        lbTwitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/twitter.png"))); // NOI18N
        lbTwitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbTwitterMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelMouseEntered(evt);
            }
        });

        lbYoutube.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/youtube.png"))); // NOI18N
        lbYoutube.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbYoutubeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                labelMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbExit, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lbFacebook)
                                .addGap(18, 18, 18)
                                .addComponent(lbInstagram)
                                .addGap(18, 18, 18)
                                .addComponent(lbTwitter)
                                .addGap(18, 18, 18)
                                .addComponent(lbYoutube))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)
                                .addComponent(tfUsername)
                                .addComponent(pfPassword)
                                .addComponent(lbErrorText, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                .addComponent(btnRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4))
                        .addGap(0, 90, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbExit, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbErrorText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(lbInstagram))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel4)
                            .addGap(18, 18, 18)
                            .addComponent(lbFacebook))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbTwitter, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbYoutube, javax.swing.GroupLayout.Alignment.TRAILING)))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, 470, 550));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 460, 550));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void labelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelMouseEntered
        Cursor cursor = new Cursor(Cursor.HAND_CURSOR);
        if(evt.getSource() instanceof JLabel)
            ((JLabel)evt.getSource()).setCursor(cursor);
    }//GEN-LAST:event_labelMouseEntered

    private void lbExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbExitMouseClicked
        this.dispose();
    }//GEN-LAST:event_lbExitMouseClicked

    private void lbFacebookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFacebookMouseClicked
        try {
            Desktop desktop = java.awt.Desktop.getDesktop();
            URI oURL = new URI("https://www.facebook.com/CineStarCinemasHrvatska/");
            desktop.browse(oURL);
        } catch (Exception e) {
            MessageUtils.showErrorMessage("Error", "Cannot open selected link.");
        }
    }//GEN-LAST:event_lbFacebookMouseClicked

    private void lbInstagramMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbInstagramMouseClicked
        try {
            Desktop desktop = java.awt.Desktop.getDesktop();
            URI oURL = new URI("https://www.instagram.com/cinestarcinemas_hr/");
            desktop.browse(oURL);
        } catch (IOException | URISyntaxException e) {
            MessageUtils.showErrorMessage("Error", "Cannot open selected link.");
        }
    }//GEN-LAST:event_lbInstagramMouseClicked

    private void lbTwitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbTwitterMouseClicked
        try {
            Desktop desktop = java.awt.Desktop.getDesktop();
            URI oURL = new URI("https://twitter.com/cinestarcinema");
            desktop.browse(oURL);
        } catch (IOException | URISyntaxException e) {
            MessageUtils.showErrorMessage("Error", "Cannot open selected link.");
        }
    }//GEN-LAST:event_lbTwitterMouseClicked

    private void lbYoutubeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbYoutubeMouseClicked
        try {
            Desktop desktop = java.awt.Desktop.getDesktop();
            URI oURL = new URI("https://www.youtube.com/user/CineStarMultiplexi");
            desktop.browse(oURL);
        } catch (IOException | URISyntaxException e) {
            MessageUtils.showErrorMessage("Error", "Cannot open selected link.");
        }
    }//GEN-LAST:event_lbYoutubeMouseClicked

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        if (formValid()) {
            try {
                String password = new String(pfPassword.getPassword());
                if (repository.checkExistence(tfUsername.getText().trim(), password)) {
                    user = repository.findUser(tfUsername.getText().trim(), password);
                    MainFrame mainFrame = new MainFrame(this, user);
                    mainFrame.setVisible(true);
                    this.setVisible(false);
                    clearForm();
                } else {
                    lbErrorText.setText("Wrong username or password");
                }
            } catch (Exception ex) {
                MessageUtils.showErrorMessage("Error", "Unrecoverable error!");
                System.exit(1);
            }
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void pfPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pfPasswordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnLogin.doClick();
        }
    }//GEN-LAST:event_pfPasswordKeyPressed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        if (formValid()) {
            try {
                String password = new String(pfPassword.getPassword());
                if (!repository.checkUsername(tfUsername.getText().trim())) {
                    int id = repository.createUser(new User(tfUsername.getText().trim(), password, false));
                    MessageUtils.showInformationMessage("Success", "User successfully created!");
                    user = repository.selectUser(id).get();
                    MainFrame mainFrame = new MainFrame(this, user);
                    mainFrame.setVisible(true);
                    this.setVisible(false);
                    clearForm();
                } else {
                    lbErrorText.setText("User already exists.");
                }
            } catch (Exception ex) {
                MessageUtils.showErrorMessage("Error", "Failed to create user, try again.");
            }
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void tfUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfUsernameKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            btnLogin.doClick();
        }
    }//GEN-LAST:event_tfUsernameKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginRegisterFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbErrorText;
    private javax.swing.JLabel lbExit;
    private javax.swing.JLabel lbFacebook;
    private javax.swing.JLabel lbIcon;
    private javax.swing.JLabel lbInstagram;
    private javax.swing.JLabel lbTwitter;
    private javax.swing.JLabel lbYoutube;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    private void imageSetup() {
        BufferedImage img = null;
        try {
            img = ImageIO.read(getClass().getResource(BACKGROUND_PATH));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Image dimg = img.getScaledInstance(lbIcon.getWidth(), lbIcon.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(dimg);
        lbIcon.setIcon(icon);
    }
    
    private void initSetup() {
        validationFields = Arrays.asList(tfUsername, pfPassword);
        repository = RepositoryFactory.getRepository();
        try {
            if (!repository.checkExistence(ADMIN_USERNAME, ADMIN_PASSWORD)) {
                createAdminUser();
            }
        } catch (Exception ex) {
            MessageUtils.showErrorMessage("Fatal error", "Unrecoverable error");
            System.exit(1);
        }
    }

    private boolean formValid() {
        boolean filled = true;
        for (JTextField field : validationFields) {
            if (field.getText().trim().isEmpty()) {
                lbErrorText.setText("All fields must be filled.");
                filled = false;
            }
        }
        return filled;
    }

    private void clearForm() {
        validationFields.forEach(v -> v.setText(""));
        lbErrorText.setText("");
    }

    private void createAdminUser() throws Exception {
        repository.createUser(new User(ADMIN_USERNAME, ADMIN_PASSWORD, true));
    }
}
